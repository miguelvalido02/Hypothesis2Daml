module TestSimpleMarket where

import SimpleMarket
import Daml.Script

{- 
  1. A marketplace contract is created by the owner (Bob), making an item available for sale.
  2. The test ensures that:
      - The owner cannot accept an offer if no offer has been placed.
      - Only the designated buyer (Alice) can make an offer.
      - The buyer cannot make multiple offers before the owner responds.
      - The buyer cannot accept or reject the offer themselves.
  3. The buyer successfully places an offer, transitioning the contract to OfferPlaced.
  4. The owner rejects the offer, transitioning the contract back to ItemAvailable.
  5. The buyer places a second offer, again transitioning to OfferPlaced.
  6. The owner accepts the second offer, completing the transaction and transitioning to Accepted.
-}

test : Script ()
test = script do
  owner  <- allocateParty "Bob"  -- Owner
  buyer <- allocateParty "Alice" -- Buyer

  -- Step 1: Create the initial Market
  itemAvailable <- submit owner do
    createCmd Market with
      owner = owner
      buyer = buyer
      item = "item"
      state = "ItemAvailable"

  -- Make sure that the owner cannot accept offer as there is no offer
  submitMustFail owner do
    exerciseCmd itemAvailable AcceptOffer
  -- Make sure that the only the buyer can make an offer
  submitMustFail owner do
    exerciseCmd itemAvailable MakeOffer
  -- Step 2: Buyer places an offer, changing state to "OfferPlaced"
  offerPlaced <- submit buyer do
    exerciseCmd itemAvailable MakeOffer

  -- Make sure that the buyer cannot make another offer
  submitMustFail buyer do
    exerciseCmd offerPlaced MakeOffer
  -- Make sure that the buyer cannot accept the offer
  submitMustFail buyer do
    exerciseCmd offerPlaced AcceptOffer
  -- Make sure that the buyer cannot reject the offer
  submitMustFail buyer do
    exerciseCmd offerPlaced RejectOffer
  
  -- Step 3: Owner rejects the offer, transitioning back to "ItemAvailable"
  rejected <- submit owner do
    exerciseCmd offerPlaced RejectOffer
  
  -- Step 4: Buyer makes second offer, transitioning to "OfferPlaced"
  offerPlaced2 <- submit buyer do
    exerciseCmd rejected MakeOffer
  -- Step 5: Owner accepts the offer, transitioning to "Accepted"
  accepted <- submit owner do
    exerciseCmd offerPlaced2 AcceptOffer
  debug accepted